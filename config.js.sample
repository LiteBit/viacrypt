// vim: filetype=javascript
var cfg = {};

// Sample Configuration
// ====================


// ## Primary Settings
//
cfg.listen = '127.0.0.1';
cfg.port = 8001;

// URL used when generating URL client-side and when retrieving a message.
// Never prefix the protocol (http or https). It is generated according to
// the access.
cfg.baseurl = '//127.0.0.1:8001';

// this URL will be used on the footer links on mails
cfg.siteurl = 'http:' + cfg.baseurl;


// ## Internationalization Options
//
// the available langs are on locale dir
cfg.enabled_langs = [
	'en',
	'br',
]

// you might want to disable serving static files on production to avoid
// unecessary hassles that may come with it. (set to false to disable)
cfg.serve_static = true;
cfg.static_dir = __dirname + '/static';


// ## Message Provider Backend
//
// available options are 'fs' and 'mongo'
cfg.message_provider = 'fs';

// used with fs store
cfg.fs_options = {
	messages_path: __dirname + '/messages'
}

// used with mongo store
cfg.mongo_options = {
	host: 'localhost',
	port: '27017',
	database: 'viacrypt',
	collection: 'messages'
}


// ## Email notification configuration
//
// The hide_header flag indicates wheter or not the email address header
// will be suppressed when the message is sent to the user
// the service parameter is optional and should be one of the 
// services defined by nodemailer.
//
// See [here](http://www.nodemailer.com/#well-known-services-for-smtp) for
// more examples. When the backend is `smtp` it is passed directly to
// nodemailer options on `createTransport`.
cfg.enable_email_notification = false;
cfg.notification_options = {
	hide_header: false,
	sender: 'ViaCRYPT Notifications <viacrypt@localhost>',
	// file backend
	backend: {
		type: 'file',
		filepath: __dirname + '/mail.log'
	}
	// smtp backend with custom server
	//backend: {
	//	type: 'smtp',
	//	host: 'smtp.star.wars',
	//	port: '465', // not needed if 25
	//	auth: {
	//		user: 'darthvader',
	//		pass: 'd4rkf0rc3'
	//	}
	//}
	// smtp backend using gmail service
	//backend: {
	//	type: 'smtp',
	//	service: "Gmail", // sets automatically host, port and connection security settings
	//	auth: {
	//		user: "example@gmail.com",
	//		pass: "mysecretpassword"
	//	}
	//}
}


// ## Rate limit
//
// The interval must be in seconds.
// Defaults to 75 messages every 30 minutes.
// Uncomment to enable.
//cfg.ratelimit = {};
//cfg.ratelimit.limit = 75
//cfg.ratelimit.interval = 60 * 30
//
// You can use redis to rate limit.
// Uncomment the follow lines to enable it.
//cfg.ratelimit.redis = {}
//cfg.ratelimit.redis.port = 6379;
//cfg.ratelimit.redis.host = '127.0.0.1'
//cfg.ratelimit.redis.options = {};


// ## LiveReload
//
// this option will enable livereload script to be rendered on the index.html page
// which is loaded when `grunt watch` is running and makes the page reload every
// time a source file is changed.
cfg.enable_livereload = false;


// ## Google Analytics
//
cfg.enable_ga = false;
cfg.ga_tracking_code = 'UA-XXXXX-Y';


module.exports = cfg;
